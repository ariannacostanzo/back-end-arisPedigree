generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Breed {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dogs      Dog[]
}

model Country {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  code      String   @unique
  dogs      Dog[]
}

model Dog {
  id             Int       @id @default(autoincrement())
  name           String
  slug           String
  image          String?
  titles         String?
  sireId         Int?
  damId          Int?
  sire           Dog?      @relation("SireRelation", fields: [sireId], references: [id])
  dam            Dog?      @relation("DamRelation", fields: [damId], references: [id])
  childrenAsSire Dog[]     @relation("SireRelation") // Relazione per i figli, mostra i bambini da padre
  childrenAsDam  Dog[]     @relation("DamRelation") // Relazione per i figli, mostra i bambini da madre
  views          Int       @default(0)
  sex            Boolean   @default(true)
  size           String?
  weight         String?
  dateOfBirth    DateTime?
  dateOfDeath    DateTime?
  color          String?

  breeder String?
  kennel  String?
  owner   String?
  notes   String? @db.Text

  // breed, non opzionale
  breedId Int
  breed   Breed @relation(fields: [breedId], references: [id])

  //country, non opzionale
  countryId Int
  country   Country @relation(fields: [countryId], references: [id])

  //user a cui Ã¨ legato, non opzionale
  userId Int
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String   @unique
  password  String
  dogs      Dog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
